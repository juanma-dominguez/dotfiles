## set tab title to cwd
# $1 = type; 0 - both, 1 - tab, 2 - title
precmd () {
  tab_label=${PWD/${HOME}/\~} # use 'relative' path
  echo -ne "\e]2;${tab_label}\a" # set window title to full string
  echo -ne "\e]1;${tab_label: -24}\a" # set tab title to rightmost 24 characters
}

# Recursive search using grep
search () {
    grep -R "${*}" . | grep -v "/.git/"
}

# Function to unlock Bitwarden vault and export session into current shell
bwu() {
    BW_STATUS=$(bw status | jq -r .status)
    case "$BW_STATUS" in
    "unauthenticated")
        echo "Logging into BitWarden"
        export BW_SESSION=$(bw login --raw)
        ;;
    "locked")
        echo "Unlocking Vault"
        export BW_SESSION=$(bw unlock --raw)
        ;;
    "unlocked")
        echo "Vault is unlocked"
        ;;
    *)
        echo "Unknown Login Status: $BW_STATUS"
        return 1
        ;;
    esac
    bw sync
}

function cdd() {
  cd "$(ls -d -- */ | fzf)" || echo "Invalid directory"
}

function recent_dirs() {
  # This script depends on pushd. It works better with autopush enabled in ZSH
  escaped_home=$(echo $HOME | sed 's/\//\\\//g')
  selected=$(dirs -p | sort -u | fzf)

  cd "$(echo "$selected" | sed "s/\~/$escaped_home/")" || echo "Invalid directory"
}

_reverse-search() {
  local selected_command=$(fc -rl 1 | awk '{$1="";print substr($0,2)}' | fzf)
  LBUFFER=$selected_command
}
zle -N _reverse-search
bindkey '^r' _reverse-search

_find-home(){
  cd $WORKDIR
  dirtomove=$(ls | fzf)
  cd "$dirtomove"
}
zle -N _find-home
bindkey '^w' _find_home

_find(){
  dirtomove=$(ls | fzf)
  cd "$dirtomove"
}
zle -N _find
bindkey '^f' _find

_docker_connect(){
  if docker ps >/dev/null 2>&1; then
  container=$(docker ps | awk '{if (NR!=1) print $1 ": " $(NF)}' | fzf --height 40%)

  if [[ -n $container ]]; then
    container_id=$(echo $container | awk -F ': ' '{print $1}')
    docker exec -it $container_id /bin/bash || docker exec -it $container_id /bin/sh
  else
    echo "You haven't selected any container! ༼つ◕_◕༽つ"
  fi
else
  echo "Docker daemon is not running! (ಠ_ಠ)"
fi
}
zle -N _docker_connect
bindkey  '^o'  _docker_connect